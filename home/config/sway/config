### Variables

set $mod Mod4
set $alt Mod1
set $left Left
set $right Right
set $up Up
set $down Down
set $term gnome-terminal
# set $menu kitty --title fzlaunch --config ~/.config/kitty/fzlaunch.conf -e fzlaunch.py
set $menu kupfer
set $script_dir '/home/todor/.config/sway/scripts'

### Window configuration

default_border pixel 6
default_floating_border normal 6
client.focused #00000000 #00000000 #ffffffff #00000000
client.focused_inactive #00000000 #00000000 #ffffffff #00000000
client.unfocused #00000000 #00000000 #ffffffff #00000000
client.urgent #2f343a #00000000 #ffffffff #2f343a
floating_modifier $alt normal
font pango:monospace 10
for_window [tiling] title_format "| %title |"

bindsym --to-code $mod+shift+S exec save_window.py


### Idle configuration

exec swayidle -w \
         before-sleep '$script_dir/lock.sh' \
         lock '$script_dir/lock.sh' \
         timeout 10 'if pgrep swaylock; then swaymsg "output * dpms off"; fi' \
         resume 'swaymsg "output * dpms on"'

bindsym --to-code $mod+L exec '$script_dir/lock.sh'


### Input configuration

input type:touchpad {
    tap enabled
    middle_emulation enabled
}

input * {
    xkb_layout "us,bg"
    xkb_variant ",phonetic"
    xkb_options "grp:win_space_toggle"
}


### Output configuration

exec "swaybg -i $($script_dir/wallpaper.sh) -m fill"
exec "swaybg -i $($script_dir/wallpaper.sh) -m fill"


### Key bindings

## Launchers

bindsym --to-code $mod+T exec $term
bindsym --to-code $mod+F exec nautilus
bindsym --to-code $mod+W exec firefox
bindsym --to-code $mod+D exec recoll

bindcode --release 133 exec $menu
bindsym --to-code $mod+K exec kupfer

## Kill focused window

bindsym --to-code $mod+Shift+Q kill
bindsym $alt+f4 kill

## Moving around:

# Move your focus around
bindsym $alt+$left focus left
bindsym $alt+$down focus down
bindsym $alt+$up focus up
bindsym $alt+$right focus right
bindsym $alt+Ctrl+Shift+$up focus parent

# Move the focused window with the same, but add Shift
bindsym $alt+Shift+$left move left
bindsym $alt+Shift+$down move down
bindsym $alt+Shift+$up move up
bindsym $alt+Shift+$right move right

## Workspaces:

# Alt-tab to switch workspace
exec $script_dir/sway-set-ws-first.py
bindcode 64 exec pkill -USR1 -f sway-set-ws-first
bindsym $alt+Tab exec "kill $(pgrep swaybg | sort | head -1)"; exec "swaybg -i $($script_dir/wallpaper.sh) -m fill"; workspace next_on_output
#workspace_auto_back_and_forth yes

# Autoname workspaces
exec $script_dir/sway-autoname-workspaces.py

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9; workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10; workspace number 10

## Layout:

# Open child
exec $script_dir/sway-new-workspace.py
bindsym $mod+h splith, exec 'pkill -USR1 -f sway-new-workspace'
bindsym $mod+v splitv, exec 'pkill -USR1 -f sway-new-workspace'


# Switch the current container between different layout styles
bindsym $mod+$up layout toggle tabbed stacking
bindsym $mod+$down layout splitv
bindsym $mod+$left layout splith
bindsym $mod+$right layout splith

# Toggle the current focus between tiling and floating mode
bindsym --to-code $mod+P floating toggle
bindsym --to-code $mod+S sticky toggle

# Make the current focus fullscreen
bindsym f11 fullscreen


# Scratchpad:

# Move the currently focused window to the scratchpad
bindsym $mod+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+equal scratchpad show


# Reload the configuration file
bindsym --to-code $mod+Shift+C reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+Backspace exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# Mode resize

mode "resize" {
    bindsym $left resize shrink width 30px
    bindsym $right resize grow width 30px
    bindsym $up resize grow height 30px
    bindsym $down resize shrink height 30px

    bindsym $mod+$left gaps horizontal current plus 30
    bindsym $mod+$right gaps horizontal current minus 30
    bindsym $mod+$down gaps vertical current plus 30
    bindsym $mod+$up gaps vertical current minus 30

    bindsym ctrl+$left gaps left current minus 15; gaps right current plus 15
    bindsym ctrl+$right gaps left current plus 15; gaps right current minus 15
    bindsym ctrl+$down gaps top current plus 15; gaps bottom current minus 15
    bindsym ctrl+$up gaps top current minus 15; gaps bottom current plus 15

    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

## Multimedia keys

bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl s 2%-
bindsym XF86MonBrightnessUp exec brightnessctl s 2%+
bindsym --release Print exec grim -t jpeg -g "$(slurp)" ~/Pictures/screenshots/$(date +%Y-%m-%d_%H-%m-%s).jpg
bindsym ctrl+Print exec 'grim -t jpeg -g "$(slurp)" - | wl-copy'

### Gestures ###

exec lisgd -d /dev/input/event18 -t 50 \
    -g "3,RL,*,*,R,swaymsg \"workspace next_on_output --create\"" \
    -g "3,LR,*,*,R,swaymsg \"workspace prev_on_output --create\"" \
    -g "2,DU,*,*,R,swaymsg layout tabbed" \
    -g "2,UD,*,*,R,swaymsg layout splith" \
    -g "4,UD,*,*,R,swaymsg kill"


### Status Bar:

bar {
    swaybar_command waybar
    
#   position top
#   gaps 6 12 0 12
#   font DejaVu Serif Italic 10
#   colors {
#       background #00000000
#       inactive_workspace #849CB6 #849CB6 #333333
#       active_workspace #849CB6 #849CB6 #333333
#       focused_workspace #849CB6 #BBCCDD #333333
#       urgent_workspace #849CB6 #E11A1A #333333
#       binding_mode #849CB6 #BBCCDD #333333
#    }
#    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
}


### Startup applications not managed by systemd

exec kupfer --no-splash
exec mako
exec recollindex -w 60 -m
exec gammastep-indicator


### Include other config files

include ~/.config/sway/apps.conf
include /etc/sway/config.d/*

exec "systemctl --user import-environment; systemctl --user start sway-session.target"

